swagger: '2.0'
info:
  title: VAND API
  version: "2.0.0"

# the domain of the service
host: localhost:3000
# array of all schemes that your API supports
schemes:
  - https
produces:
  - application/json
paths:
  /datalayer/getServerOverview:
    post:
      summary: datalayer/getSeverOverview
      description: |
        This call is used to serve data for the frontend's data table at the import dialog. Accessed within frontend/layers/datalayer.js
      responses:
        200:
          description: "app.docs.overview will be the referenced by the data property. result.data = [{section:string,topic:string, articles: int, sources:int },...]. result.error is null."
        default:
          description: Server error. result.error will reference object.
      tags:
        - datalayer

  /datalayer/importFromServer:
    post:
      summary: datalayer/importFromSever
      description:
        This call is used to transport the actual (potentially colored) article data, similarity matrix and segment matches to the frontend. Accessed within frontend/layers/datalayer.js
      parameters:
        - name: req.pairs
          in: query
          description: Array with the form [{section:string,topic:string}].
          required: true
          type: array
          format: double
          items: {}
        - name: req.metric
          in: query
          description: req.metric in ['cosine', 'jaccard'].
          required: true
          type: string
          format: string
      responses:
        200:
          description: "The data property will reference the following: {docs:[{...}, {...}], matches:[{}], links: [{source: int, target:int, value: double}, }. result.error is null."
        default:
          description: Server error. result.error will reference object.
      tags:
        - datalayer
  /processor/run:
    post:
      summary: processor/run
      description: |
         This call returns a a list of segment matches, similarity values and a color lookup for a given set of documents. It's accessed (1) by frontend's datalayer to complement
         the information for articles imported on client side. (2) Programmatically accessed by backend's datalayer.
      parameters:
        - name: req.docs
          in: query
          description: Array of document objects.
          required: true
          type: array
          format: double
          items: {}
        - name: req.metric
          in: query
          description: metric in ['cosine', 'jaccard']
          required: true
          type: string
          format: string
      responses:
        200:
          description: "The data property will reference the following: {colored: [{index:int, values:[r,g,b,a]}], links: [{source: int, target:int, value: double}]. result.error is null."
        default:
          description: Server error. result.error will be the error object.
      tags:
        - processor
  /processor/seg:
    post:
      summary: processor/seg
      description: |
         This route is requested when only segment matches need to be determined. For instance, when the main article in the frontend is switched.
      parameters:
        - name: req.docs
          in: query
          description: Array of document objects.
          required: true
          type: number
          format: double

      responses:
        200:
          description: "The data property will reference the following: {matches:[...]}."
        default:
          description: Server error. result.error will be the error object.
      tags:
        - processor